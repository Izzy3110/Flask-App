name: main-tests-on_push
on:
  push:
    tags:
      - '!refs/tags/*'
    branches:
      - 'main'
env:
  FLASK_DEBUG: development
jobs:

  basic-ubuntu-run_tests:
    runs-on: [ubuntu-latest]

    strategy:
      matrix:
        python-version: [3.11.1]
    steps:
      - uses: mirromutth/mysql-action@v1.1
        with:
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
          mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: myFlaskMysqlPass1 # Required if "mysql user" exists. The password for the "mysql user"
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            **/requirements*.txt
      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils libcurl4-openssl-dev libssl-dev build-essential
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --use-pep517
      - name: Test with pytest
        run: |
          pytest -v
      - name: Run tests
        run: coverage run src/test/app_test.py
      - name: Run tests HTML
        run: coverage html src/test/app_test.py
      - name: Coverage Results
        uses: actions/upload-artifact@v3
        with:
         name: coverage-report-html
         path: htmlcov/index.html
      - name: Tests report
        run: coverage report
